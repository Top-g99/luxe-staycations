"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6506],{36506:(t,n,s)=>{s.d(n,{supabaseConsultationService:()=>a});class e{static getInstance(){return e.instance||(e.instance=new e),e.instance}async initialize(){return Promise.resolve()}async getAll(){return this.consultations}async getById(t){return this.consultations.find(n=>n.id===t)||null}async create(t){let n={...t,id:Date.now().toString(),created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return this.consultations.push(n),n}async update(t,n){let s=this.consultations.findIndex(n=>n.id===t);return -1!==s?(this.consultations[s]={...this.consultations[s],...n,updated_at:new Date().toISOString()},this.consultations[s]):null}async delete(t){let n=this.consultations.findIndex(n=>n.id===t);return -1!==n&&(this.consultations.splice(n,1),!0)}async getAllConsultations(){return this.consultations}async createConsultation(t){return this.create(t)}async clearAllConsultations(){return this.consultations=[],console.log("All consultations cleared"),!0}constructor(){this.consultations=[]}}let a=e.getInstance()}}]);